name: "LLM PR Review"

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  pr-review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v4

      - name: Get PR diff
        id: diff
        run: |
          git fetch origin ${{ github.base_ref }}
          git diff origin/${{ github.base_ref }}...HEAD > pr_diff.txt
          echo "diff<<EOF" >> $GITHUB_OUTPUT
          cat pr_diff.txt >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Generate PR review with OpenAI
        id: review
        run: |
          RESPONSE=$(curl https://api.openai.com/v1/chat/completions \
            -s \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${{ secrets.OPENAI_API_KEY }}" \
            -d "{
              \"model\": \"gpt-4o-mini\",
              \"messages\": [
                {\"role\": \"system\", \"content\": \"You are a code reviewer. Review the PR diff and provide constructive feedback.\"},
                {\"role\": \"user\", \"content\": \"PR Title: ${{ github.event.pull_request.title }}\n\nPR Body: ${{ github.event.pull_request.body }}\n\nDiff:\n${{ steps.diff.outputs.diff }}\"}
              ],
              \"temperature\": 0.3
            }" | jq -r '.choices[0].message.content')

          echo "review=$RESPONSE" >> $GITHUB_OUTPUT

      - name: Post PR review as comment
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸ¤– LLM Review:\n\n${{ steps.review.outputs.review }}`
            })
