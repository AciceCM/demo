name: "LLM PR Review"

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  pr-review:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      issues: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get PR files
        id: files
        run: |
          curl -s \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            ${{ github.event.pull_request.url }}/files > pr_files.json
          echo "Fetched PR files"

      - name: Review each file
        id: review-files
        run: |
          # Iterate over each changed file
          jq -c '.[]' pr_files.json | while read file; do
            FILENAME=$(echo "$file" | jq -r '.filename')
            PATCH=$(echo "$file" | jq -r '.patch // ""')

            if [ -z "$PATCH" ]; then
              echo "Skipping $FILENAME (no patch)"
              continue
            fi

            # Prepare JSON payload for OpenAI
            PAYLOAD=$(jq -n \
              --arg filename "$FILENAME" \
              --arg patch "$PATCH" \
              '{
                model: "gpt-4o-mini",
                messages: [
                  {role: "system", content: "You are a senior code reviewer. Review only this file's diff and give constructive feedback."},
                  {role: "user", content: ("File: " + $filename + "\n\nDiff:\n" + $patch)}
                ],
                temperature: 0.3
              }')

            # Call OpenAI API
            REVIEW=$(curl -s https://api.openai.com/v1/chat/completions \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $OPENAI_API_KEY" \
              -d "$PAYLOAD" | jq -r '.choices[0].message.content')

            if [ -n "$REVIEW" ] && [ "$REVIEW" != "null" ]; then
              # Save review in temp file for later step
              echo "FILENAME=$FILENAME" >> reviews.txt
              echo "REVIEW<<EOF" >> reviews.txt
              echo "$REVIEW" >> reviews.txt
              echo "EOF" >> reviews.txt
            fi
          done
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      - name: Post file-by-file PR comments
        if: ${{ steps.review-files.outputs.reviews != '' || always() }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            if (require('fs').existsSync('reviews.txt')) {
              const content = require('fs').readFileSync('reviews.txt', 'utf8');
              const entries = content.split(/(?=FILENAME=)/).filter(Boolean);

              for (const entry of entries) {
                const filenameMatch = entry.match(/^FILENAME=(.+)/);
                const reviewMatch = entry.match(/REVIEW<<EOF\n([\s\S]+?)\nEOF/);

                if (filenameMatch && reviewMatch) {
                  const filename = filenameMatch[1];
                  const review = reviewMatch[1];

                  github.rest.issues.createComment({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: context.issue.number,
                    body: `ðŸ¤– LLM Review for \`${filename}\`:\n\n${review}`
                  });
                }
              }
            }
